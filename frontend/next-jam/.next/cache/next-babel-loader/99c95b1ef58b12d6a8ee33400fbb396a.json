{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport siteMap from \"~/site/site-map\";\nimport matter from \"gray-matter\";\nexport var getFrontmatterDataByTypeAndId = function getFrontmatterDataByTypeAndId(type, id) {\n  var content, data;\n  return _regeneratorRuntime.async(function getFrontmatterDataByTypeAndId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!id || !type)) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(import(\"~/site/data/\".concat(type, \"/\").concat(id, \"/index.md\")));\n\n        case 4:\n          content = _context.sent;\n          data = matter(content[\"default\"]);\n          return _context.abrupt(\"return\", {\n            content: data.content,\n            data: data.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getFrontmatterById = function getFrontmatterById(id) {\n  var page, content, data;\n  return _regeneratorRuntime.async(function getFrontmatterById$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (id) {\n            _context2.next = 2;\n            break;\n          }\n\n          return _context2.abrupt(\"return\");\n\n        case 2:\n          page = siteMap[id];\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(import(\"~/site/content\".concat(page === null || page === void 0 ? void 0 : page.url, \"index.md\")));\n\n        case 5:\n          content = _context2.sent;\n          data = matter(content[\"default\"]);\n          return _context2.abrupt(\"return\", {\n            content: data.content,\n            data: data.data\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getFrontmatterByContext = function getFrontmatterByContext(context) {\n  var asPath, req, pathToMarkdown, content, data;\n  return _regeneratorRuntime.async(function getFrontmatterByContext$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          asPath = context.asPath, req = context.req;\n          pathToMarkdown = \"\".concat((req === null || req === void 0 ? void 0 : req.url) ? \"\".concat(req === null || req === void 0 ? void 0 : req.url) : \"\".concat(asPath));\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(import(\"~/site/content\".concat(pathToMarkdown, \"index.md\")));\n\n        case 4:\n          content = _context3.sent;\n          data = matter(content[\"default\"]);\n          return _context3.abrupt(\"return\", {\n            content: data.content,\n            data: data.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Johnny Kristensen/Desktop/next-jam/frontend/next-jam/src/js/utils/site-helpers/frontmatter.ts"],"names":["siteMap","matter","getFrontmatterDataByTypeAndId","type","id","content","data","getFrontmatterById","page","url","getFrontmatterByContext","context","asPath","req","pathToMarkdown"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAUC,IAAV,EAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEvC,CAACA,EAAD,IAAO,CAACD,IAF+B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2CAIrB,6BAAsBA,IAAtB,cAA8BC,EAA9B,eAJqB;;AAAA;AAIrCC,UAAAA,OAJqC;AAKrCC,UAAAA,IALqC,GAK9BL,MAAM,CAACI,OAAO,WAAR,CALwB;AAAA,2CAOpC;AACHA,YAAAA,OAAO,EAAEC,IAAI,CAACD,OADX;AAEHC,YAAAA,IAAI,EAAEA,IAAI,CAACA;AAFR,WAPoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtC;AAaP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUH,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEzBA,EAFyB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIxBI,UAAAA,IAJwB,GAIjBR,OAAO,CAACI,EAAD,CAJU;AAAA;AAAA,2CAKR,+BAAwBI,IAAxB,aAAwBA,IAAxB,uBAAwBA,IAAI,CAAEC,GAA9B,cALQ;;AAAA;AAKxBJ,UAAAA,OALwB;AAMxBC,UAAAA,IANwB,GAMjBL,MAAM,CAACI,OAAO,WAAR,CANW;AAAA,4CAQvB;AACHA,YAAAA,OAAO,EAAEC,IAAI,CAACD,OADX;AAEHC,YAAAA,IAAI,EAAEA,IAAI,CAACA;AAFR,WARuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAcP,OAAO,IAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,UAAAA,MAD2B,GACXD,OADW,CAC3BC,MAD2B,EACnBC,GADmB,GACXF,OADW,CACnBE,GADmB;AAE7BC,UAAAA,cAF6B,aAET,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEJ,GAAL,cAAcI,GAAd,aAAcA,GAAd,uBAAcA,GAAG,CAAEJ,GAAnB,cAA8BG,MAA9B,CAFS;AAAA;AAAA,2CAGb,+BAAwBE,cAAxB,cAHa;;AAAA;AAG7BT,UAAAA,OAH6B;AAI7BC,UAAAA,IAJ6B,GAItBL,MAAM,CAACI,OAAO,WAAR,CAJgB;AAAA,4CAM5B;AACLA,YAAAA,OAAO,EAAEC,IAAI,CAACD,OADT;AAELC,YAAAA,IAAI,EAAEA,IAAI,CAACA;AAFN,WAN4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC","sourcesContent":["import siteMap from \"~/site/site-map\";\r\nimport matter from \"gray-matter\";\r\nimport { NextPageContext } from \"next\";\r\n\r\nexport const getFrontmatterDataByTypeAndId = async <T>(type: string, id: string) => {\r\n\r\n  if (!id || !type) return;\r\n\r\n  const content = await import(`~/site/data/${type}/${id}/index.md`);\r\n  const data = matter(content.default);\r\n\r\n  return {\r\n      content: data.content,\r\n      data: data.data as T\r\n    }\r\n};\r\n\r\nexport const getFrontmatterById = async <T>(id: string) => {\r\n\r\n    if (!id) return;\r\n\r\n    const page = siteMap[id];\r\n    const content = await import(`~/site/content${page?.url}index.md`);\r\n    const data = matter(content.default);\r\n\r\n    return {\r\n        content: data.content,\r\n        data: data.data as T\r\n      }\r\n};\r\n\r\nexport const getFrontmatterByContext = async <T>(context: NextPageContext) => {\r\n    const { asPath, req } = context;\r\n    const pathToMarkdown = `${req?.url ? `${req?.url}` : `${asPath}`}`;\r\n    const content = await import(`~/site/content${pathToMarkdown}index.md`);\r\n    const data = matter(content.default);\r\n  \r\n    return {\r\n      content: data.content,\r\n      data: data.data as T\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}