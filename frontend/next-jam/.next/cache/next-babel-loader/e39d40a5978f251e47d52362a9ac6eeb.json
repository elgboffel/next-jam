{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport siteMap from \"~/site/site-map\";\nimport matter from \"gray-matter\";\nexport const getFrontmatterDataByTypeAndId = async (type, id) => {\n  if (!id || !type) return;\n  const content = await import(`~/site/data/${type}/${id}/index.md`);\n  const data = matter(content.default);\n  return {\n    content: data.content,\n    data: data.data\n  };\n};\nexport const getFrontmatterById = async id => {\n  if (!id) return;\n  const page = siteMap[id];\n  const content = await import(`~/site/content${page === null || page === void 0 ? void 0 : page.url}index.md`);\n  const data = matter(content.default);\n  return {\n    content: data.content,\n    data: data.data\n  };\n};\nexport const getFrontmatterByContext = async context => {\n  const {\n    asPath,\n    req\n  } = context;\n  const pathToMarkdown = `${(req === null || req === void 0 ? void 0 : req.url) ? `${req === null || req === void 0 ? void 0 : req.url}` : `${asPath}`}`;\n  const content = await import(`~/site/content${pathToMarkdown}index.md`);\n  const frontmatter = matter(content.default);\n  return _objectSpread({}, frontmatter.data);\n};","map":{"version":3,"sources":["C:/Users/Johnny Kristensen/Desktop/next-jam/frontend/next-jam/src/js/utils/site-helpers/frontmatter.ts"],"names":["siteMap","matter","getFrontmatterDataByTypeAndId","type","id","content","data","default","getFrontmatterById","page","url","getFrontmatterByContext","context","asPath","req","pathToMarkdown","frontmatter"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,OAAO,MAAMC,6BAA6B,GAAG,OAAUC,IAAV,EAAwBC,EAAxB,KAAuC;AAElF,MAAI,CAACA,EAAD,IAAO,CAACD,IAAZ,EAAkB;AAElB,QAAME,OAAO,GAAG,MAAM,OAAQ,eAAcF,IAAK,IAAGC,EAAG,WAAjC,CAAtB;AACA,QAAME,IAAI,GAAGL,MAAM,CAACI,OAAO,CAACE,OAAT,CAAnB;AAEA,SAAO;AACHF,IAAAA,OAAO,EAAEC,IAAI,CAACD,OADX;AAEHC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAFR,GAAP;AAID,CAXM;AAaP,OAAO,MAAME,kBAAkB,GAAG,MAAUJ,EAAV,IAAyB;AAEvD,MAAI,CAACA,EAAL,EAAS;AAET,QAAMK,IAAI,GAAGT,OAAO,CAACI,EAAD,CAApB;AACA,QAAMC,OAAO,GAAG,MAAM,OAAQ,iBAAgBI,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAEC,GAAI,UAAlC,CAAtB;AACA,QAAMJ,IAAI,GAAGL,MAAM,CAACI,OAAO,CAACE,OAAT,CAAnB;AAEA,SAAO;AACHF,IAAAA,OAAO,EAAEC,IAAI,CAACD,OADX;AAEHC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAFR,GAAP;AAIH,CAZM;AAcP,OAAO,MAAMK,uBAAuB,GAAG,MAAUC,OAAV,IAAuC;AAC1E,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkBF,OAAxB;AACA,QAAMG,cAAc,GAAI,GAAE,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEJ,GAAL,IAAY,GAAEI,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEJ,GAAI,EAAvB,GAA4B,GAAEG,MAAO,EAAE,EAAjE;AACA,QAAMR,OAAO,GAAG,MAAM,OAAQ,iBAAgBU,cAAe,UAAvC,CAAtB;AACA,QAAMC,WAAW,GAAGf,MAAM,CAACI,OAAO,CAACE,OAAT,CAA1B;AAEA,2BAAeS,WAAW,CAACV,IAA3B;AACH,CAPM","sourcesContent":["import siteMap from \"~/site/site-map\";\r\nimport matter from \"gray-matter\";\r\nimport { NextPageContext } from \"next\";\r\n\r\nexport const getFrontmatterDataByTypeAndId = async <T>(type: string, id: string) => {\r\n\r\n  if (!id || !type) return;\r\n\r\n  const content = await import(`~/site/data/${type}/${id}/index.md`);\r\n  const data = matter(content.default);\r\n\r\n  return {\r\n      content: data.content,\r\n      data: data.data as T\r\n    }\r\n};\r\n\r\nexport const getFrontmatterById = async <T>(id: string) => {\r\n\r\n    if (!id) return;\r\n\r\n    const page = siteMap[id];\r\n    const content = await import(`~/site/content${page?.url}index.md`);\r\n    const data = matter(content.default);\r\n\r\n    return {\r\n        content: data.content,\r\n        data: data.data as T\r\n      }\r\n};\r\n\r\nexport const getFrontmatterByContext = async <T>(context: NextPageContext) => {\r\n    const { asPath, req } = context;\r\n    const pathToMarkdown = `${req?.url ? `${req?.url}` : `${asPath}`}`;\r\n    const content = await import(`~/site/content${pathToMarkdown}index.md`);\r\n    const frontmatter = matter(content.default);\r\n  \r\n    return <T>{ ...frontmatter.data }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}